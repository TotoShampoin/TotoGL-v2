cmake_minimum_required(VERSION 3.5)
project(totogl)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake/" ${CMAKE_MODULE_PATH})

set(TOTOGL_BINARY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/bin)
set(TOTOGL_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(TOTOGL_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/inc)
set(TOTOGL_VENDOR_DIR ${CMAKE_CURRENT_SOURCE_DIR}/vendor)

find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)
find_package(GLEW REQUIRED)
find_package(glm REQUIRED)

file(GLOB_RECURSE TOTOGL_INCLUDE_FILES CONFIGURE_DEPENDS ${TOTOGL_INCLUDE_DIR}/*.hpp ${TOTOGL_INCLUDE_DIR}/*.tpp)
file(GLOB_RECURSE TOTOGL_SOURCE_FILES CONFIGURE_DEPENDS ${TOTOGL_SOURCE_DIR}/*.cpp)


add_library(${PROJECT_NAME} SHARED "")
target_sources(${PROJECT_NAME} PRIVATE ${TOTOGL_SOURCE_FILES} PUBLIC ${TOTOGL_INCLUDE_FILES})
target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_23)

set_target_properties(${PROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${TOTOGL_BINARY_DIR})

target_link_libraries(${PROJECT_NAME} PRIVATE OpenGL glfw GLU GLEW glm)

target_include_directories(${PROJECT_NAME} PUBLIC ${TOTOGL_INCLUDE_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${TOTOGL_VENDOR_DIR})

if (MSVC)
    target_compile_options(${PROJECT_NAME} PRIVATE /W3)
else()
    target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -Wpedantic -pedantic-errors)
endif()
